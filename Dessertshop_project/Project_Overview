Project Overview:
The Dessert Shop Management System is a Python-based application designed to manage and streamline the operations of a dessert shop. The system handles various dessert items such as candy, cookies, ice cream, and sundaes, allowing the shop to manage orders, calculate costs, apply taxes, and handle payment processing efficiently.

Key Features:

Dessert Item Management:

The system includes classes for different types of desserts (Candy, Cookie, IceCream, and Sundae), each with specific attributes like weight, quantity, price per unit, and additional toppings.
Each dessert item has methods to calculate its cost and the applicable tax based on a set tax percentage.
Order Management:

The application allows the creation of an Order object that can hold multiple dessert items.
Items in the order can be combined if they share similar attributes (e.g., same type of candy or cookie).
The system calculates the total cost and tax for the entire order.
Payment Processing:

The system supports setting and managing different payment types for orders, providing flexibility in how orders are processed.
Comparison and Sorting:

Dessert items can be compared based on their cost, enabling sorting of items within an order by price.
How It Runs:

Initialization:

The application begins by creating instances of dessert items (e.g., candy, cookies) with specific attributes like name, weight, price per pound, or quantity.
These items are added to an Order object.
Order Processing:

Once the items are added to the order, the system can combine similar items, calculate the total cost, and apply taxes.
The Order class provides methods to sort items by their cost and to output a detailed summary of the order.
Output:

The final order summary includes details about each item, including its name, quantity, price per unit, total cost, tax, and packaging type.
The summary also displays the total cost and tax for the entire order, as well as the selected payment type.
Execution Example:

To run the application, you would typically create dessert items, add them to an order, and then display the order summary. The main logic is handled in separate Python files, which are structured to work together seamlessly.
Running the Project:

The project can be run from a Python script or interactive shell by importing the necessary classes and following the process of creating and managing an order as described above.
